<Window x:Class="CoffeeFlow.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:base="clr-namespace:CoffeeFlow.Base"
        xmlns:views="clr-namespace:CoffeeFlow.Views"
        Title="CoffeeFlow - Visual Flow Scripting Tool" Height="768" Width="1368" DataContext="{Binding Source={StaticResource Locator}}" Icon="/CoffeeFlow;component/icon.ico">

    <Window.ContextMenu>
        <ContextMenu x:Name="MainContextMenu">
            <MenuItem Header="Add Node" Click="AddNode_Click"/>
            <MenuItem Header="Delete Node" Click="DeleteNode_Click"/>
            <MenuItem Header="Reset View" Click="ResetView_Click"/>
        </ContextMenu>
    </Window.ContextMenu>

    <Window.Resources>
        <Style  TargetType="{x:Type MenuItem}">
            <Setter Property="Foreground" Value="#4D4D4D" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="Border" 
Background="{TemplateBinding Background}" 
BorderBrush="{TemplateBinding BorderBrush}" 
BorderThickness="{TemplateBinding BorderThickness}">


                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="Col0" MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                    <ColumnDefinition x:Name="Col3" Width="14"/>
                                </Grid.ColumnDefinitions>
                                <!-- ContentPresenter to show an Icon if needed -->
                                <ContentPresenter Grid.Column="0" Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>
                                <!-- Glyph is a checkmark if needed for a checkable menu -->
                                <Grid Grid.Column="0" Visibility="Hidden" Margin="4,0,6,0" x:Name="GlyphPanel" VerticalAlignment="Center">
                                    <Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight"/>
                                </Grid>
                                <!-- Content for the menu text etc -->
                                <ContentPresenter Grid.Column="1" 
Margin="{TemplateBinding Padding}" 
x:Name="HeaderHost" 
RecognizesAccessKey="True" 
ContentSource="Header"/>
                                <!-- Content for the menu IGT -->
                                <ContentPresenter Grid.Column="2" 
Margin="8,1,8,1" 
x:Name="IGTHost" 
ContentSource="InputGestureText" 
VerticalAlignment="Center"/>
                                <!-- Arrow drawn path which points to the next level of the menu -->
                                <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                    <Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z"/>
                                </Grid>
                                <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
                                <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" x:Name="SubMenuPopup" Focusable="false" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                    <Border x:Name="SubMenuBorder" BorderBrush="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}" BorderThickness="1" Padding="1,1,1,1">
                                        <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                            <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                        </Grid>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
                        <ControlTemplate.Triggers>
                            <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
                            <Trigger Property="Role" Value="TopLevelHeader">
                                <Setter Property="Padding" Value="10,1,6,1"/>
                                <Setter Property="Placement" Value="Bottom"  TargetName="SubMenuPopup"/>
                                <Setter Property="MinWidth" Value="0" TargetName="Col0"/>
                                <Setter Property="Width" Value="Auto" TargetName="Col3"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="GlyphPanel"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>
                            <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
                            <Trigger Property="Role" Value="TopLevelItem">
                                <Setter Property="Padding" Value="6,1,6,1"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>
                            <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
                            <Trigger Property="Role" Value="SubmenuHeader">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                                <Setter Property="Padding" Value="0,2,0,2"/>
                            </Trigger>
                            <!-- Role = SubMenuItem : this is a child menu item which has children-->
                            <Trigger Property="Role" Value="SubmenuItem">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                                <Setter Property="Padding" Value="2,2,0,2"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>
                            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
                            </Trigger>
                            <!-- If no Icon is present the we collapse the Icon Content -->
                            <Trigger Property="Icon" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                            </Trigger>
                            <!-- The GlyphPanel contains the CheckMark -->
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                            </Trigger>
                            <!-- Using the system colors for the Menu Highlight and IsEnabled-->
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter Property="Background" TargetName="Border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF575757" Offset="0"/>
                                            <GradientStop Color="#FF292929" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="LightGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.InputBindings>
        <MouseBinding MouseAction="RightClick"  Command="{Binding ShowNodeListCommand,
                                        RelativeSource={RelativeSource FindAncestor, 
                                        AncestorType={x:Type Window}}}"
                                      CommandParameter="{Binding .}"/>

        <MouseBinding MouseAction="LeftClick"  Command="{Binding HideNodeListCommand,
                                        RelativeSource={RelativeSource FindAncestor, 
                                        AncestorType={x:Type Window}}}"
                                      CommandParameter="{Binding .}"/>

        <KeyBinding Command="{Binding Path=Network.DeleteNodesCommand}" 
                Key="Delete" 
                />

        <KeyBinding Command="{Binding Path=Network.SaveNodesCommand}" 
                Key="S" Modifiers="Control" 
                />

    </Window.InputBindings>
    <Grid x:Name="mainGrid" >
        <Grid.RowDefinitions>
            <RowDefinition Height="30*"/>
            <RowDefinition Height="739*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="102*"/>
            <ColumnDefinition Width="293*"/>
        </Grid.ColumnDefinitions>


        <!--<ItemsControl Name="lol" ItemsSource="{Binding Network.Nodes}"></ItemsControl> -->
        <base:NodeGrid HorizontalAlignment="Stretch" ItemsSource="{Binding Network.Nodes}" VerticalAlignment="Stretch"  x:Name="nodeGrid" Grid.ColumnSpan="2" Margin="0" Grid.RowSpan="2"  />
        <views:NodeListWindow x:Name="lstAvailableNodes" IsCenter="False" Visibility="Collapsed" Background="#CC0E0E0E" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.ColumnSpan="2" Grid.RowSpan="2" ></views:NodeListWindow>


        <Grid Grid.Row="1" Name="GridColumn1" Background="#4C000000">
            <views:NodeListWindow x:Name="lstAvailableNodes2" Visibility="Visible" IsCenter="False" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="0,00,0,0" Height="604" Loaded="lstAvailableNodes2_Loaded"  />

            <Grid  Height="Auto" HorizontalAlignment="Left" Margin="10 0 0 0" VerticalAlignment="Bottom" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="0"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="40"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="140"></ColumnDefinition>
                    <ColumnDefinition Width="200"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <TextBlock Text="Trigger name" Margin="10 0" Foreground="Gray" Grid.Row="3" />


                <TextBox HorizontalAlignment="Left" Height="23"  TextWrapping="Wrap" Grid.Row="3" Grid.Column="1" Text="{Binding Main.NewTriggerName}" VerticalAlignment="Top" Width="190"/>

                <Button Style="{StaticResource DarkButton}"  Content="Add Trigger" Command="{Binding Main.AddTriggerCommand}" HorizontalAlignment="Left" Grid.Row="4" Grid.Column="1"  VerticalAlignment="Top" Width="190"/>
            </Grid>


        </Grid>

        <DockPanel HorizontalAlignment="Stretch" Background="#FF1D1919" Grid.Row="2" Grid.ColumnSpan="2">
            <StackPanel Orientation="Horizontal" Name="StatusBarPanel">
                <Label Content="{Binding Main.StatusLabel}" Foreground="Gray"></Label>
            </StackPanel>
        </DockPanel>

        <Menu HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="50" Grid.ColumnSpan="2" Grid.Row="0" Foreground="#FF999797">
            <Menu.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF171717" Offset="0"/>
                    <GradientStop Color="#FF363636" Offset="1"/>
                </LinearGradientBrush>
            </Menu.Background>
            <MenuItem Header="_File" Foreground="#FFC7C6C6" >
                <MenuItem Header="_Open C# File"  Background="#FF272323" Foreground="#FF999797" Command="{Binding Main.OpenCodeWindowCommand}"/>
                <MenuItem Header="_Open localization"  Background="#FF272323" Foreground="#FF999797" Command="{Binding Main.OpenLocalizationWindowCommand}"/>
                <MenuItem Header="_New Project"  Background="#FF272323" Foreground="#FF999797" Command="{Binding Network.ClearNodesCommand}"/>
                <MenuItem Header="_Save nodegraph" Background="#FF272323" Foreground="#FF999797" Command="{Binding Network.SaveNodesCommand}" />
                <MenuItem Header="_Load nodegraph" Background="#FF272323" Foreground="#FF999797" Command="{Binding Network.LoadNodesCommand}" />

                <MenuItem Header="Open Lua/Perl File" Background="#FF272323" Foreground="#FF999797" Command="{Binding OpenLuaPerlFileCommand}" />
                <MenuItem Header="Save as Lua" Background="#FF272323" Foreground="#FF999797" Command="{Binding SaveAsLuaCommand}" />
                <MenuItem Header="Save as Perl" Background="#FF272323" Foreground="#FF999797" Command="{Binding SaveAsPerlCommand}" />

                <MenuItem Header="_Exit" Command="{Binding ExitCommand}" />

                <MenuItem Header="_Close" Background="#FF272323" Foreground="#FF999797" Command="{Binding CloseAppCommand,
                                        RelativeSource={RelativeSource FindAncestor, 
                                        AncestorType={x:Type Window}}}"/>

            </MenuItem>

            <MenuItem Header="_View" Foreground="#FFC7C6C6" >
                <MenuItem Header="_Sidebar"  Background="#FF272323" Foreground="#FF999797" Command="{Binding ToggleSidebarCommand,
                                        RelativeSource={RelativeSource FindAncestor, 
                                        AncestorType={x:Type Window}}}"/>
                <MenuItem Header="_Debug"  Background="#FF272323" Foreground="#FF999797" Command="{Binding Main.OpenDebugCommand}"/>
            </MenuItem>

            <MenuItem Header="_Edit" Foreground="#FFC7C6C6" Background="#00191010">
                <MenuItem Header="Increase line strength" Background="#FF272323" Foreground="#FF999797" Command="{Binding Network.IncreaseBezierStrengthCommand}"></MenuItem>
                <MenuItem Header="Decrease line strength" Background="#FF272323" Foreground="#FF999797" Command="{Binding Network.DecreaseBezierStrengthCommand}"></MenuItem>
                <MenuItem Header="Reset line strength" Background="#FF272323" Foreground="#FF999797" Command="{Binding Network.ResetBezierStrengthCommand}"></MenuItem>
            </MenuItem>
        </Menu>

        <StackPanel HorizontalAlignment="Right" Grid.Row="0" Grid.Column="1">
            <Label Content="{Binding Main.CurrentCodeFile}" Margin="20 0"  Foreground="#FF999797" Visibility="Collapsed"></Label>
        </StackPanel>
        <Button Style="{StaticResource DarkButton}"  Content="Save!" FontSize="10" Width="100" Height="20" HorizontalAlignment="Right" Margin="5 0" VerticalAlignment="Center" Grid.Column="2" Command="{Binding Network.SaveNodesCommand}" Grid.Row="2"/>
        <TextBlock Text="OR10N" FontSize="28" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,15,13" Foreground="Gray" Grid.Column="1" Grid.Row="1"/>
    </Grid>

</Window>